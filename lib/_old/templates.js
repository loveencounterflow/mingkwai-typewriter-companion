// Generated by CoffeeScript 2.4.1
(function() {
  // cannot 'use strict'

  //###########################################################################################################
  var CND, TEACUP, _STYLUS, alert, badge, debug, help, info, log, njs_fs, njs_path, rpr, urge, warn, whisper;

  njs_path = require('path');

  njs_fs = require('fs');

  //...........................................................................................................
  CND = require('cnd');

  rpr = CND.rpr.bind(CND);

  badge = '明快打字机/TEMPLATES';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  //...........................................................................................................
  // MKTS                      = require './main'
  TEACUP = require('coffeenode-teacup');

  // CHR                       = require 'coffeenode-chr'
  //...........................................................................................................
  _STYLUS = require('stylus');

  // as_css                    = STYLUS.render.bind STYLUS
  // style_route               = njs_path.join __dirname, '../src/mingkwai-typesetter.styl'
  // css                       = as_css njs_fs.readFileSync style_route, encoding: 'utf-8'
  //...........................................................................................................

  //===========================================================================================================
  // TEACUP NAMESPACE ACQUISITION
  //-----------------------------------------------------------------------------------------------------------
  Object.assign(this, TEACUP);

  //-----------------------------------------------------------------------------------------------------------
  this.FULLHEIGHTFULLWIDTH = this.new_tag(function(...P) {
    return this.TAG('fullheightfullwidth', ...P);
  });

  this.OUTERGRID = this.new_tag(function(...P) {
    return this.TAG('outergrid', ...P);
  });

  this.TOPBAR = this.new_tag(function(...P) {
    return this.TAG('topbar', ...P);
  });

  this.CONTENT = this.new_tag(function(...P) {
    return this.TAG('content', ...P);
  });

  this.MIDBAR = this.new_tag(function(...P) {
    return this.TAG('midbar', ...P);
  });

  this.SHADE = this.new_tag(function(...P) {
    return this.TAG('shade', ...P);
  });

  this.SCROLLER = this.new_tag(function(...P) {
    return this.TAG('scroller', ...P);
  });

  this.BOTTOMBAR = this.new_tag(function(...P) {
    return this.TAG('bottombar', ...P);
  });

  this.LBBAR = this.new_tag(function(...P) {
    return this.TAG('lbbar', ...P);
  });

  this.RBBAR = this.new_tag(function(...P) {
    return this.TAG('rbbar', ...P);
  });

  //...........................................................................................................
  this.JS = this.new_tag(function(route) {
    return this.SCRIPT({
      type: 'text/javascript',
      src: route
    });
  });

  this.CSS = this.new_tag(function(route) {
    return this.LINK({
      rel: 'stylesheet',
      href: route
    });
  });

  this.STYLUS = function(source) {
    return this.STYLE({}, _STYLUS.render(source));
  };

  //===========================================================================================================

  //-----------------------------------------------------------------------------------------------------------
  this.get_row_html = function(key_value_pairs) {
    return this.render(() => {
      return this.TR('.candidate', () => {
        var j, key, len, results, value;
        results = [];
        for (j = 0, len = key_value_pairs.length; j < len; j++) {
          [key, value] = key_value_pairs[j];
          results.push(this.TD(`.${key}`, value.toString()));
        }
        return results;
      });
    });
  };

  // #===========================================================================================================
  // #
  // #-----------------------------------------------------------------------------------------------------------
  // @main = ->
  //   #.........................................................................................................
  //   return @render =>
  //     @DOCTYPE 5
  //     @HTML =>
  //       @HEAD =>
  //         @META charset: 'utf-8'
  //         @TITLE '明快打字机'
  //         # @LINK rel: 'shortcut icon', href: './favicon.icon'
  //         ### -------------------------------------------------------------------------------------------- ###
  //         ### The Tomkel-Harders device to make sure jQuery and other libraries are correctly              ###
  //         ### loaded and made available even in Electron; see                                              ###
  //         ###   https://github.com/electron/electron/issues/254#issuecomment-183483641                     ###
  //         ###   https://stackoverflow.com/a/37480521/7568091                                               ###
  //         ### -------------------------- THIS LINE MUST COME BEFORE ANY IMPORTS -------------------------- ###
  //         @SCRIPT "if (typeof module === 'object') {window.module = module; module = undefined;}"
  //         ### -------------------------------------------------------------------------------------------- ###
  //         @JS     '../public/jquery-3.3.1.js'
  //         @CSS    './styles.css'
  //         ### -------------------------------------------------------------------------------------------- ###
  //         ### CodeMirror                                                                                   ###
  //         @CSS    '../public/codemirror-5.39.0/lib/codemirror.css'
  //         @CSS    '../public/codemirror-5.39.0/addon/fold/foldgutter.css'
  //         @CSS    '../public/codemirror-5.39.0/addon/dialog/dialog.css'
  //         @CSS    '../public/codemirror-5.39.0/theme/monokai.css'
  //         @JS     '../public/codemirror-5.39.0/lib/codemirror.js'
  //         @JS     '../public/codemirror-5.39.0/mode/javascript/javascript.js'
  //         @JS     '../public/codemirror-5.39.0/mode/coffeescript/coffeescript.js'
  //         @JS     '../public/codemirror-5.39.0/addon/search/searchcursor.js'
  //         @JS     '../public/codemirror-5.39.0/addon/search/search.js'
  //         @JS     '../public/codemirror-5.39.0/addon/dialog/dialog.js'
  //         @JS     '../public/codemirror-5.39.0/addon/edit/matchbrackets.js'
  //         @JS     '../public/codemirror-5.39.0/addon/edit/closebrackets.js'
  //         @JS     '../public/codemirror-5.39.0/addon/comment/comment.js'
  //         @JS     '../public/codemirror-5.39.0/addon/wrap/hardwrap.js'
  //         @JS     '../public/codemirror-5.39.0/addon/fold/foldcode.js'
  //         @JS     '../public/codemirror-5.39.0/addon/fold/brace-fold.js'
  //         @JS     '../public/codemirror-5.39.0/keymap/sublime.js'
  //         ### -------------------------- THIS LINE MUST COME AFTER ANY IMPORTS --------------------------- ###
  //         @SCRIPT "if (window.module) module = window.module;"
  //         ### -------------------------------------------------------------------------------------------- ###
  //       #=====================================================================================================
  //       @COFFEESCRIPT =>
  //         ( $ document ).ready ->
  //       #=====================================================================================================
  //       @BODY =>
  //         #...................................................................................................
  //         # @DIV '#qdt', '0'
  //         @DIV '#outergrid.grid', =>
  //           #.................................................................................................
  //           @DIV '#toggle-area.area', =>
  //             @DIV '#capslock.kblayers.toggle', => 'L'
  //             @DIV '#shift.kblayers.toggle',    => 'S'
  //             @DIV '#ctrl.kblayers.toggle',     => 'C'
  //             @DIV '#alt.kblayers.toggle',      => 'A'
  //             @DIV '#altgr.kblayers.toggle',    => '?'
  //           #.................................................................................................
  //           @DIV '#innergrid.grid.area', =>
  //             @DIV '#upper-placeholder.area', => 'upper-placeholder'
  //           #   @DIV '#output-area.area', =>
  //           #     @TEXTAREA '#codemirror.inbox'
  //             #...............................................................................................
  //             @DIV '#candidates-area.area', =>
  //               @DIV '.inbox', =>
  //                 'candidates'
  //               # @DIV '#selector-background'
  //               # @DIV '.inbox', =>
  //               #   # 'CANDIDATES'
  //               #   @TABLE '#candidates', =>
  //               #     @TBODY()
  //               # @DIV '#selector-foreground'
  //           #.................................................................................................
  //           @DIV '#input-area.area', =>
  //             @DIV '#text-input.inbox', contenteditable: 'true'
  //           #.................................................................................................
  //           @DIV '#status-area.area', => @DIV '.inbox', => 'STATUS'
  //         #...................................................................................................
  //         @JS     './window.js'

  //===========================================================================================================

  //-----------------------------------------------------------------------------------------------------------
  this.main_2 = function() {
    //.........................................................................................................
    return this.render(() => {
      this.DOCTYPE(5);
      this.META({
        charset: 'utf-8'
      });
      // @META 'http-equiv': "Content-Security-Policy", content: "default-src 'self'"
      // @META 'http-equiv': "Content-Security-Policy", content: "script-src 'unsafe-inline'"
      this.TITLE('明快打字机');
      // @LINK rel: 'shortcut icon', href: './favicon.icon'
      /* ------------------------------------------------------------------------------------------------ */
      /* The Tomkel-Harders device to make sure jQuery and other libraries are correctly                  */
      /* loaded and made available even in Electron; see                                                  */
      /*   https://github.com/electron/electron/issues/254#issuecomment-183483641                         */
      /*   https://stackoverflow.com/a/37480521/7568091                                                   */
      /* -------------------------- THIS LINE MUST COME BEFORE ANY IMPORTS ------------------------------ */
      this.SCRIPT("if (typeof module === 'object') {window.module = module; module = undefined;}");
      /* ------------------------------------------------------------------------------------------------ */
      this.JS('../public/jquery-3.3.1.js');
      this.CSS('../public/reset.css');
      this.CSS('./styles-01.css');
      /* ------------------------------------------------------------------------------------------------ */
      /* CodeMirror                                                                                       */
      this.CSS('../public/codemirror-5.39.0/lib/codemirror.css');
      this.CSS('../public/codemirror-5.39.0/addon/fold/foldgutter.css');
      this.CSS('../public/codemirror-5.39.0/addon/dialog/dialog.css');
      this.CSS('../public/codemirror-5.39.0/theme/monokai.css');
      this.JS('../public/codemirror-5.39.0/lib/codemirror.js');
      this.JS('../public/codemirror-5.39.0/mode/javascript/javascript.js');
      this.JS('../public/codemirror-5.39.0/mode/coffeescript/coffeescript.js');
      this.JS('../public/codemirror-5.39.0/addon/search/searchcursor.js');
      this.JS('../public/codemirror-5.39.0/addon/search/search.js');
      this.JS('../public/codemirror-5.39.0/addon/dialog/dialog.js');
      this.JS('../public/codemirror-5.39.0/addon/edit/matchbrackets.js');
      this.JS('../public/codemirror-5.39.0/addon/edit/closebrackets.js');
      this.JS('../public/codemirror-5.39.0/addon/comment/comment.js');
      this.JS('../public/codemirror-5.39.0/addon/wrap/hardwrap.js');
      this.JS('../public/codemirror-5.39.0/addon/fold/foldcode.js');
      this.JS('../public/codemirror-5.39.0/addon/fold/brace-fold.js');
      this.JS('../public/codemirror-5.39.0/keymap/sublime.js');
      /* -------------------------- THIS LINE MUST COME AFTER ANY IMPORTS ------------------------------- */
      this.CSS('../public/styles-99.css');
      this.SCRIPT("if (window.module) module = window.module;");
      /* ------------------------------------------------------------------------------------------------ */
      //=======================================================================================================
      this.FULLHEIGHTFULLWIDTH(() => {
        return this.OUTERGRID(() => {
          this.TOPBAR(() => {
            /* TAINT multiple wrapping needed? */
            return this.CONTENT(() => {
              return this.TEXTAREA('#codemirror');
            });
          });
          this.MIDBAR(() => {
            this.SHADE('.background');
            this.SCROLLER(() => {
              return this.TABLE('#candidates', () => {
                return this.TBODY(() => {
                  return this.TR(() => {
                    this.TD('.value', "MingKwai");
                    this.TD('.glyph', "明快打字机");
                    return this.TD('.value', "TypeWriter");
                  });
                });
              });
            });
            return this.SHADE('.foreground');
          });
          this.LBBAR(() => {
            return 'L';
          });
          this.BOTTOMBAR(() => {
            return this.DIV('#text-input.inbox', {
              contenteditable: 'true'
            });
          });
          return this.RBBAR(() => {
            return 'R';
          });
        });
      });
      //=======================================================================================================
      return this.JS('./window.js');
    });
  };

  //===========================================================================================================

  //-----------------------------------------------------------------------------------------------------------
  this.font_test = function(app, md, settings, handler) {
    var n, triplets;
    n = 10;
    triplets = [[0x0061, 0x007a, 'u-latn'], [0x2e80, 0x2eff, 'u-cjk-rad2'], [0x2f00, 0x2fdf, 'u-cjk-rad1'], [0x3000, 0x303f, 'u-cjk-sym'], [0x31c0, 0x31ef, 'u-cjk-strk'], [0x3200, 0x32ff, 'u-cjk-enclett'], [0x3300, 0x33ff, 'u-cjk-cmp'], [0x3400, 0x4dbf, 'u-cjk-xa'], [0x4e00, 0x9fff, 'u-cjk'], [0xe000, 0xf8ff, 'jzr'], [0xf900, 0xfaff, 'u-cjk-cmpi1'], [0xfe30, 0xfe4f, 'u-cjk-cmpf'], [0x20000, 0x2b81f, 'u-cjk-xb'], [0x2a700, 0x2b73f, 'u-cjk-xc'], [0x2b740, 0x2b81f, 'u-cjk-xd'], [0x2f800, 0x2fa1f, 'u-cjk-cmpi2']];
    //.........................................................................................................
    return render(() => {
      DOCTYPE(5);
      return HTML(() => {
        HEAD(() => {
          META({
            charset: 'utf-8'
          });
          // META name: 'viewport', content: 'width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;'
          TITLE('mingkwai');
          // TITLE '明快打字机'
          LINK({
            rel: 'shortcut icon',
            href: './favicon.icon'
          });
          CSS('./html5doctor-css-reset.css');
          // CSS './fonts/webfontkit-20150311-073132/stylesheet.css'
          JS('./jquery-2.1.3.js');
          CSS('./jquery-ui-1.11.3.custom/jquery-ui.css');
          JS('./jquery-ui-1.11.3.custom/jquery-ui.js');
          JS('./jquery.event.drag-2.2/jquery.event.drag-2.2.js');
          JS('./outerHTML-2.1.0.js');
          JS('./blaidddrwg.js');
          // JS  './convertPointFromPageToNode.js'
          JS('./jquery-transit.js');
          JS('./browser.js');
          JS('./process-xcss-rules.js');
          CSS('./materialize/css/materialize.css');
          JS('./materialize/js/materialize.min.js');
          return CSS('./mkts-main.rework.css');
        });
        //=====================================================================================================
        return BODY({
          style: "transform:scale(2);transform-origin:top left;"
        }, () => {
          var _, cid, j, len, rsg;
          H1(() => {
            return "Ligatures";
          });
          P(() => {
            TEXT("Standard Ligatures* (feature liga): fluffy, shy, official; ");
            return EM("gg, nagy, gjuha, Qyteti.");
          });
          //...................................................................................................
          H1(() => {
            return "Unicode Ranges";
          });
          DIV(() => {
            var cid, cids, j, len, ref, ref1, results;
            ref1 = [
              (function() {
                var results1 = [];
                for (var k = ref = 0x2a6d6 - 9; ref <= 0x2a6d6 ? k <= 0x2a6d6 : k >= 0x2a6d6; ref <= 0x2a6d6 ? k++ : k--){ results1.push(k); }
                return results1;
              }).apply(this),
              [173824, 173825, 173826, 173827, 173828, 173829, 173830, 173831, 173832, 173833, 173834]
            ];
            results = [];
            for (j = 0, len = ref1.length; j < len; j++) {
              cids = ref1[j];
              results.push((function() {
                var k, len1, results1;
                results1 = [];
                for (k = 0, len1 = cids.length; k < len1; k++) {
                  cid = cids[k];
                  results1.push(TEXT(CHR.as_uchr(cid)));
                }
                return results1;
              })());
            }
            return results;
          });
          for (j = 0, len = triplets.length; j < len; j++) {
            [cid, _, rsg] = triplets[j];
            P(() => {
              // SPAN style: "font-family:'cjk','lastresort';", =>
              SPAN(() => {
                var i, k, ref, results;
                results = [];
                for (i = k = 0, ref = n; (0 <= ref ? k < ref : k > ref); i = 0 <= ref ? ++k : --k) {
                  results.push(SPAN({
                    style: "display:inline-block;"
                  }, () => {
                    return CHR.as_uchr(cid + i);
                  }));
                }
                return results;
              });
              return SPAN(() => {
                return TEXT(`(${rsg})`);
              });
            });
          }
          //...................................................................................................
          H1(() => {
            return "Other Stuff";
          });
          P({
            style: "font-family:'spincycle-eot','lastresort';"
          }, () => {
            SPAN(() => {
              return "一丁";
            });
            return SPAN(() => {
              return "abcdef (spincycle-eot)";
            });
          });
          P({
            style: "font-family:'spincycle-embedded-opentype','lastresort';"
          }, () => {
            SPAN(() => {
              return "一丁";
            });
            return SPAN(() => {
              return "abcdef (spincycle-embedded-opentype)";
            });
          });
          P({
            style: "font-family:'spincycle-woff2','lastresort';"
          }, () => {
            SPAN(() => {
              return "一丁";
            });
            return SPAN(() => {
              return "abcdef (spincycle-woff2)";
            });
          });
          P({
            style: "font-family:'spincycle-woff','lastresort';"
          }, () => {
            SPAN(() => {
              return "一丁";
            });
            return SPAN(() => {
              return "abcdef (spincycle-woff)";
            });
          });
          P({
            style: "font-family:'spincycle-truetype','lastresort';"
          }, () => {
            SPAN(() => {
              return "一丁";
            });
            return SPAN(() => {
              return "abcdef (spincycle-truetype)";
            });
          });
          P({
            style: "font-family:'spincycle-svg','lastresort';"
          }, () => {
            SPAN(() => {
              return "一丁";
            });
            return SPAN(() => {
              return "abcdef (spincycle-svg)";
            });
          });
          return P({
            style: "font-family:'lastresort';"
          }, () => {
            SPAN(() => {
              return "一丁";
            });
            return SPAN(() => {
              return "abcdef (lastresort)";
            });
          });
        });
      });
    });
  };

  //===========================================================================================================

  //-----------------------------------------------------------------------------------------------------------
  this.test_page = function() {
    //.........................................................................................................
    return render(() => {
      DOCTYPE(5);
      return HTML(() => {
        HEAD(() => {
          META({
            charset: 'utf-8'
          });
          JS('./jquery-2.1.3.js');
          JS('./outerHTML-2.1.0.js');
          // JS  './blaidddrwg.js'
          JS('./browser.js');
          STYLE('', "html, body {\n  margin:                 0;\n  padding:                0;\n}\n.gauge {\n  position:               absolute;\n  outline:                1px solid red;\n}");
          //===================================================================================================
          return COFFEESCRIPT(function() {
            return ($('document')).ready(function() {
              var d_npx, d_rpx, gauge, j, results;
              log = console.log.bind(console);
              // #...............................................................................................
              // gauges                = $ '.gauge'
              // for gauge_idx in [ 0 ... gauges.length ]
              //   gauge               = gauges.eq gauge_idx
              //   height_npx          = parseInt ( gauge.css 'height' ), 10
              //   height_rpx_a        = gauge.height()
              //   height_rpx_b        = gauge[ 0 ].getBoundingClientRect()[ 'height' ]
              //   log gauge_idx + 1, height_npx, height_rpx_a, height_rpx_b
              //...............................................................................................
              gauge = $("<div id='meter-gauge' style='position:absolute;'></div>");
              ($('body')).append(gauge);
              results = [];
              for (d_npx = j = 1; j <= 1000; d_npx = ++j) {
                gauge.css('height', `${d_npx}px`);
                d_rpx = gauge[0].getBoundingClientRect()['height'];
                results.push(log(d_npx, d_rpx));
              }
              return results;
            });
          });
        });
        //=====================================================================================================
        return BODY(() => {});
      });
    });
  };

  //-----------------------------------------------------------------------------------------------------------
  this.splash_window = function() {
    //.........................................................................................................
    return render(() => {
      DOCTYPE(5);
      return HTML(() => {
        STYLE('', "body, html {\n  width:                    100%;\n  height:                   100%;\n  overflow:                 hidden;\n}\nbody {\n  width:                    100%;\n  height:                   100%;\n  background-color:         rgba( 255, 255, 255, 0.0 );\n  background-image:         url(./mingkwai-logo-circled.png);\n  background-size:          contain;\n  background-repeat:        no-repeat;\n  background-position:      50%;\n}");
        // position:                 fixed;
        // top:                      10mm;
        // left:                     10mm;
        return BODY(() => {});
      });
    });
  };

  //-----------------------------------------------------------------------------------------------------------
  this.NORMAL_layout = function() {
    //.........................................................................................................
    return render(() => {
      DOCTYPE(5);
      return HTML(() => {
        HEAD(() => {
          META({
            charset: 'utf-8'
          });
          // META name: 'viewport', content: 'width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;'
          TITLE('mingkwai (NORMAL_layout)');
          // TITLE '明快打字机'
          LINK({
            rel: 'shortcut icon',
            href: './favicon.icon'
          });
          CSS('./html5doctor-css-reset.css');
          // # CSS './fonts/webfontkit-20150311-073132/stylesheet.css'
          JS('./jquery-2.1.3.js');
          CSS('./jquery-ui-1.11.3.custom/jquery-ui.css');
          JS('./jquery-ui-1.11.3.custom/jquery-ui.js');
          JS('./jquery.event.drag-2.2/jquery.event.drag-2.2.js');
          JS('./outerHTML-2.1.0.js');
          JS('../node_modules/jquery-replace-text/jquery-replace-text.js');
          JS('./blaidddrwg.js');
          // JS  './convertPointFromPageToNode.js'
          JS('./jquery-transit.js');
          JS('./browser.js');
          JS('./process-xcss-rules.js');
          CSS('./materialize/css/materialize.css');
          JS('./materialize/js/materialize.min.js');
          CSS('./mkts-main.rework.css');
          return STYLE("body {\n  font-size: 4mm;\n}");
        });
        //=====================================================================================================
        COFFEESCRIPT(() => {
          return ($(document)).ready(function() {
            var dragging, page_x, page_y, scroll_x, scroll_y, shifted;
            // #.................................................................................................
            // start_node  = ( $ 'page column p' ).contents().eq 0
            // start_dom   = start_node.get 0
            // # endNode = $('span.second').contents().get(0);
            // range = document.createRange()
            // idx   = 0
            // text  = start_node.text()
            // while idx < text.length
            //   range.setStart start_dom, idx
            //   idx += if ( text.codePointAt idx ) > 0xffff then +2 else +1
            //   range.setEnd start_dom, idx
            //   { bottom, height, left, right, top, width } = range.getBoundingClientRect()
            //   t = range.toString()
            //   console.log ( if t is '\u00ad' then '~' else t ), left, top
            // # range.setEnd   start_node, 0
            // # console.log range.toString()
            // # console.log range.getBoundingClientRect()
            // window.myrange = range
            //.................................................................................................
            // getBoundingClientRect
            window.zoomer = $('zoomer');
            // zoomer.draggable()
            scroll_x = null;
            scroll_y = null;
            page_x = null;
            page_y = null;
            dragging = false;
            shifted = false;
            return ($(document)).on('keyup keydown', function(event) {
              shifted = event.shiftKey;
              return true;
            });
          });
        });
        /* DRAGGING / HAND TOOL SUPPORT */
        // ( $ document ).on 'dragstart', ( event, data ) ->
        //   console.log 'dragstart', event
        //   scroll_x  = ( $ window ).scrollLeft()
        //   scroll_y  = ( $ window ).scrollTop()
        //   page_x    = event.pageX
        //   page_y    = event.pageY
        //   dragging  = yes
        //   ( $ 'body' ).addClass 'grabbing'
        // # ( $ document ).on 'drag', ( event, data ) ->
        // #   console.log 'drag', [ data.deltaX, data.deltaY, ]
        // #   ( $ window ).scrollLeft scroll_x - data.deltaX
        // #   ( $ window ).scrollTop  scroll_y - data.deltaY
        // ( $ document ).on 'mousemove', ( event ) ->
        //   return unless dragging
        //   factor = 1 # if shifted then 2 else 1
        //   ( $ window ).scrollLeft ( $ window ).scrollLeft() + ( page_x - event.pageX ) * factor
        //   ( $ window ).scrollTop  ( $ window ).scrollTop()  + ( page_y - event.pageY ) * factor
        // # ( $ document ).on 'draginit', ( event ) ->
        // #   console.log 'draginit', event
        // ( $ document ).on 'dragend', ( event ) ->
        //   # console.log 'dragend', event
        //   dragging  = no
        //   ( $ 'body' ).removeClass 'grabbing'

        // ( $ document ).on 'drag',        -> console.log 'drag'; return true
        // ( $ document ).on 'touchstart',  -> console.log 'touchstart'; return true
        // ( $ document ).on 'touchmove',   -> console.log 'touchmove'; return true
        // ( $ document ).on 'touchend',    -> console.log 'touchend'; return true
        // ( $ document ).on 'touchcancel', -> console.log 'touchcancel'; return true
        // ( $ document ).on 'scrollstart', -> console.log 'scrollstart'; return true
        // ( $ document ).on 'scrollstop',  -> console.log 'scrollstop'; return true
        // ( $ document ).on 'swipe',       -> console.log 'swipe'; return true
        // ( $ document ).on 'swipeleft',   -> console.log 'swipeleft'; return true
        // ( $ document ).on 'swiperight',  -> console.log 'swiperight'; return true
        // ( $ document ).on 'tap',         -> console.log 'tap'; return true
        // ( $ document ).on 'taphold',     -> console.log 'taphold'; return true
        // ( $ document ).on 'mousedown',   -> console.log 'mousedown'; return true
        // ( $ document ).on 'mouseup',     -> console.log 'mouseup'; return true
        // ( $ document ).on 'mousemove',   -> console.log 'mousemove'; return true
        // ( $ document ).on 'mousemove', ( event ) ->
        //   app                 = window[ 'app' ]
        //   [ page_x, page_y, ] = [ event.pageX, event.pageY, ]
        //   zmr                 = window.convertPointFromPageToNode ( app[ 'zoomer' ].get 0 ), page_x, page_y
        //   console.log '©YC6EG', [ page_x, page_y, ], zmr
        //   window[ 'app' ][ 'mouse-position' ] = [ page_x, page_y, ]
        //   ( $ '#tg' ).css 'left', "#{zmr[ 'x' ]}px"
        //   ( $ '#tg' ).css 'top',  "#{zmr[ 'y' ]}px"
        // ( $ document ).on 'mousemove', ( event ) ->
        //   # console.log '©YC6EG', [ event.pageX, event.pageY, ]
        //   window[ 'app' ][ 'mouse-position' ] = [ event.pageX, event.pageY, ]
        //=====================================================================================================
        return BODY(() => {
          // A style: "display:block;position:absolute;top:0;z-index:1000;", href: './font-test.html', => "font-test"
          //...............................................................................................
          DIV('#mkts-top');
          ARTBOARD('.galley', () => {
            return ZOOMER(() => {
              return GALLEY(() => {
                OVERLAY("Galley");
                return CHASE(() => {
                  TOPMARGIN(() => {});
                  HBOX(() => {
                    LEFTMARGIN(() => {});
                    COLUMN(() => {});
                    VGAP(() => {});
                    COLUMN(() => {});
                    VGAP(() => {});
                    COLUMN(() => {});
                    return RIGHTMARGIN(() => {});
                  });
                  return BOTTOMMARGIN(() => {});
                });
              });
            });
          });
          ARTBOARD('.pages', () => {
            return ZOOMER(() => {
              var j, page_nr, results;
              results = [];
              for (page_nr = j = 1; j <= 5; page_nr = ++j) {
                results.push(PAGE(() => {
                  OVERLAY(page_nr);
                  RULER('.horizontal');
                  RULER('.vertical');
                  // CHASEWRAP =>
                  return CHASE(() => {
                    TOPMARGIN(() => {});
                    HBOX(() => {
                      LEFTMARGIN(() => {});
                      COLUMN(() => {});
                      VGAP(() => {});
                      COLUMN(() => {});
                      VGAP(() => {});
                      COLUMN(() => {});
                      return RIGHTMARGIN(() => {});
                    });
                    return BOTTOMMARGIN(() => {});
                  });
                }));
              }
              return results;
            });
          });
          HRIBBON('.draggable', {
            style: 'height:20mm;'
          }, () => {
            I('.small.mkts-tool-hand', {
              action: 'tool-mode-hand'
            });
            I('.small.mdi-editor-insert-chart', {
              action: 'editor-insert-chart'
            });
            I('.small.mdi-action-3d-rotation', {
              action: 'action-3d-rotation'
            });
            I('.small.mdi-action-assignment', {
              action: 'action-assignment'
            });
            I('.small.mdi-image-blur-on', {
              action: 'image-blur-on'
            });
            I('.small.mdi-action-print', {
              action: 'action-print'
            });
            I('.small.mdi-action-cached', {
              action: 'action-cached'
            });
            I('.small.mdi-content-content-cut', {
              action: 'content-content-cut'
            });
            return I('.small.mdi-content-content-copy', {
              action: 'content-content-copy'
            });
          });
          return DIV('#mkts-bottom');
        });
      });
    });
  };

  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  //-----------------------------------------------------------------------------------------------------------
  /* just for testing of CSS @font-face, unicode-range */
  this.FONTTEST_layout = function() {
    //.........................................................................................................
    return render(() => {
      DOCTYPE(5);
      return HTML(() => {
        HEAD(() => {
          META({
            charset: 'utf-8'
          });
          TITLE('mingkwai');
          LINK({
            rel: 'shortcut icon',
            href: './favicon.icon'
          });
          CSS('./html5doctor-css-reset.css');
          // # CSS './fonts/webfontkit-20150311-073132/stylesheet.css'
          JS('./jquery-2.1.3.js');
          CSS('./jquery-ui-1.11.3.custom/jquery-ui.css');
          JS('./jquery-ui-1.11.3.custom/jquery-ui.js');
          JS('./jquery.event.drag-2.2/jquery.event.drag-2.2.js');
          JS('./outerHTML-2.1.0.js');
          JS('./blaidddrwg.js');
          // JS  './convertPointFromPageToNode.js'
          JS('./jquery-transit.js');
          JS('./browser.js');
          // JS  './process-xcss-rules.js'
          CSS('./materialize/css/materialize.css');
          JS('./materialize/js/materialize.min.js');
          CSS('./mkts-main.rework.css');
          return STYLE("@font-face {\n  font-family:    'ampersand';\n  src:            local('Schwabacher');\n  unicode-range:  U+0026;\n}\n\n@font-face {\n  font-family:    'cjk';\n  src:            local('Sun-ExtA');\n  unicode-range:  U+4e00-9fff;\n}\n\n@font-face {\n  font-family:    'cjk';\n  src:            local('sunflower-u-cjk-xb');\n  unicode-range:  U+20000-2b81f;\n}\n\n@font-face {\n  font-family:    'cjk';\n  src:            local('jizura3b');\n  unicode-range:  U+e000-f8ff;\n}\n\n@font-face {\n  font-family:    'ancientsymbols';\n  src:            local('Geneva');\n  unicode-range:  U+10190-1019B;\n}\n\nbody, html {\n  font-family:    'ampersand', 'cjk', 'ancientsymbols', 'Source Code Pro';\n}\n\n");
        });
        // html {
        //   text-rendering:  geometricPrecision;
        //   }
        // -webkit-font-feature-settings:  "liga" 1, "dlig" 1;
        // // text-rendering:                 optimizeLegibility
        // // font-variant-ligatures:         common-ligatures
        // // font-kerning:                   normal
        //=====================================================================================================
        return BODY(() => {
          return RAW("<div>&amp;</div>\n<div>𐆓</div>\n<div>一丁丂七丄丅丆万丈三 u-cjk</div>\n<div>𠀀𠀁𠀂𠀃𠀄𠀅𠀆𠀇𠀈𠀉 u-cjk-xb</div>\n<div> jzr</div>");
        });
      });
    });
  };

  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  /* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #  */
  //-----------------------------------------------------------------------------------------------------------
  /* for testing of possible rendering bug related to CSS `display: flex; height: ...;` */
  this.FLEXHEIGHTTEST_layout = function() {
    //.........................................................................................................
    return render(() => {
      DOCTYPE(5);
      return HTML(() => {
        HEAD(() => {
          META({
            charset: 'utf-8'
          });
          TITLE('mingkwai');
          JS('./jquery-2.1.3.js');
          JS('./blaidddrwg.js');
          JS('./browser.js');
          return STYLUS("\nhtml\n  font-size:        3mm\n\nchase\ncolumn\n  outline:                1px dotted red\n  outline-offset:         -1px\n\nchase\n  position:               relative\n  left:                   4.5mm\n  top:                    8mm\n  // width:                  201mm\n  // /* ### TAINT ### */\n  height:                 278.85mm\n  display:                flex\n  flex-direction:         column\n  float:                  left\n\ncolumn\n  display:                block\n  flex-shrink:            1\n  flex-grow:              1\n");
        });
        //=====================================================================================================
        return BODY(() => {
          return CHASE(() => {
            return COLUMN(() => {
              var idx, j, results;
              results = [];
              for (idx = j = 0; j < 90; idx = ++j) {
                results.push(DIV(`${idx}`));
              }
              return results;
            });
          });
        });
      });
    });
  };

  // DIV '.chase', =>
  //   DIV '.column', =>
  //     for idx in [ 0 ... 90 ]
  //       DIV "#{idx}"

  //-----------------------------------------------------------------------------------------------------------
  /* rendering with float instead of flex */
  this.FLOAT_layout = function() {
    //.........................................................................................................
    return render(() => {
      DOCTYPE(5);
      return HTML(() => {
        HEAD(() => {
          META({
            charset: 'utf-8'
          });
          TITLE('mingkwai');
          JS('./jquery-2.1.3.js');
          JS('./blaidddrwg.js');
          JS('./browser.js');
          return STYLUS("\n\n/* ------------------------------------------------------------------------------------------------------ */\n/* Experimentally detected that `$paper-height = 297mm - 0.13mm` is not enough but\n  `297mm - 0.15mm` is enough to avoid intervening blank pages in the PDF. */\n$paper-width                = 210mm\n$paper-height               = 297mm - 0.15mm\n// $paper-width                = 210mm\n// $paper-height               = 297mm\n/* ...................................................................................................... */\n// 'gutters' in typographic terms (non-printable areas) become 'paddings' in CSS:\n$gutter-left                = 4.5mm\n$gutter-right               = $gutter-left\n$gutter-top                 = 8mm\n$gutter-bottom              = 10mm\n/* ...................................................................................................... */\n// 'margins' in typographic terms (areas outside the main content) become 'paddings' in CSS:\n$margin-left                = 15mm\n$margin-right               = $margin-left\n$margin-top                 = 11mm\n$margin-bottom              = 5mm\n/* ...................................................................................................... */\n$gap-vertical-width         = 5mm\n/* ...................................................................................................... */\n// the chase represents the printable area; inside, flanked by the margins, is the main content area:\n$chase-width                = $paper-width  - $gutter-left  - $gutter-right\n$chase-height               = $paper-height - $gutter-top   - $gutter-bottom\n/* ...................................................................................................... */\n$galley-width               = $paper-width\n/* ...................................................................................................... */\n$epsilon                    = 1mm\n\n\n/* ------------------------------------------------------------------------------------------------------ */\npaper\npage\n width:                   $paper-width\n height:                  $paper-height\n display:                 block\n\nhtml\n  font-size:              4mm\n\noverlay\n  display:                block\n  position:               absolute\n\nmargin\n  display:                block\n\nmargin.left\nmargin.right\n  float:                  left\n  height:                 100%\n\nmargin.left\n  min-width:              $margin-left\n  max-width:              $margin-left\n\nmargin.right\n  min-width:              $margin-right\n  max-width:              $margin-right\n\nmargin.top\nmargin.bottom\n  width:                  100%\n\nmargin.top\n  min-height:             $margin-top\n  max-height:             $margin-top\n\nmargin.bottom\n  min-height:             $margin-bottom\n  max-height:             $margin-bottom\n\nchase\ncolumn\nbox\nmargin\ngap\npage\n  outline:                1px dotted red\n  outline-offset:         -1px\n\nchase\n  position:               relative\n  left:                   $gutter-left\n  top:                    $gutter-top\n  width:                  $chase-width\n  height:                 $chase-height\n  display:                block\n\nbox\n  display:                block\n  float:                  left\n  width:                  $chase-width - $margin-left - $margin-right - $epsilon\n  height:                 10mm\n  background-color: #ddd\n\ngap\n  display:                block\n  width:                  $gap-vertical-width\n  float:                  left\n  height:                 100%\n\ncolumn\n  display:                block\n  height:                 100%\n  float:                  left\n\n.columns-3 column\n  width:                  ( ( $chase-width - 2 * $gap-vertical-width ) / 3 )");
        });
        //=====================================================================================================
        return BODY(() => {
          return ARTBOARD('.pages', () => {
            return ZOOMER(() => {
              // for page_nr in [ 1 .. 5 ]
              return PAGE(() => {
                // OVERLAY page_nr
                return CHASE(() => {
                  MARGIN('.top', () => {});
                  MARGIN('.left', () => {});
                  BOX('.horizontal.columns-3', () => {
                    return COLUMN(() => {});
                  });
                  // if page_nr is 1
                  // for idx in [ 0 ... 70 ]
                  //   DIV '', "#{idx}"
                  // GAP '.vertical', =>
                  // COLUMN =>
                  // GAP '.vertical', =>
                  // COLUMN =>
                  MARGIN('.right', () => {});
                  return MARGIN('.bottom', () => {});
                });
              });
            });
          });
        });
      });
    });
  };

  //-----------------------------------------------------------------------------------------------------------
  /* rendering with float instead of flex */
  this.TABLE_layout = function() {
    //.........................................................................................................
    return render(() => {
      DOCTYPE(5);
      return HTML(() => {
        var CHASE, COLUMNBOX;
        HEAD(() => {
          META({
            charset: 'utf-8'
          });
          TITLE('mingkwai');
          JS('./jquery-2.1.3.js');
          JS('./blaidddrwg.js');
          JS('./browser.js');
          return STYLUS("\n\n/* ------------------------------------------------------------------------------------------------------ */\n/* Experimentally detected that `$paper-height = 297mm - 0.13mm` is not enough but\n  `297mm - 0.15mm` is enough to avoid intervening blank pages in the PDF. */\n$paper-width                = 210mm\n$paper-height               = 297mm - 0.15mm\n// $paper-width                = 210mm\n// $paper-height               = 297mm\n/* ...................................................................................................... */\n// 'gutters' in typographic terms (non-printable areas) become 'paddings' in CSS:\n$gutter-left                = 4.5mm\n$gutter-right               = $gutter-left\n$gutter-top                 = 8mm\n$gutter-bottom              = 10mm\n/* ...................................................................................................... */\n// 'margins' in typographic terms (areas outside the main content) become 'paddings' in CSS:\n$margin-left                = 15mm\n$margin-right               = $margin-left\n$margin-top                 = 11mm\n$margin-bottom              = 5mm\n/* ...................................................................................................... */\n$gap-vertical-width         = 5mm\n/* ...................................................................................................... */\n// the chase represents the printable area; inside, flanked by the margins, is the main content area:\n$chase-width                = $paper-width  - $gutter-left  - $gutter-right\n$chase-height               = $paper-height - $gutter-top   - $gutter-bottom\n/* ...................................................................................................... */\n$galley-width               = $paper-width\n\n\n/* ------------------------------------------------------------------------------------------------------ */\npaper\npage\n width:                   $paper-width\n height:                  $paper-height\n display:                 block\n\nhtml\n  font-size:              4mm\n\n.chase\ncolumn\nbox\nmargin\ngap\npage\n  outline:                1px dotted red\n  outline-offset:         -1px\n\n.chase\n  border-collapse:        collapse\n  margin:                 0\n  padding:                0\n  position:               relative\n  left:                   $gutter-left\n  top:                    $gutter-top\n  width:                  $chase-width\n  height:                 $chase-height\n\n.margin\n  margin:                 0\n  padding:                0\n\n.margin.margin-left\n  height:                 $chase-height\n  width:                  $margin-left\n\n.margin.margin-right\n  height:                 $chase-height\n  width:                  $margin-right\n\n.margin.margin-top\n.margin.margin-bottom\n  width:                  $galley-width - $margin-left - $margin-right\n\n.margin.margin-top\n  height:                 $margin-top\n\n.margin.margin-bottom\n  height:                 $margin-bottom\n\n.gap\n  margin:                 0\n  padding:                0\n  width:                  $gap-vertical-width\n  min-width:              $gap-vertical-width\n  max-width:              $gap-vertical-width\n\n.columnbox\n.column\n  border-collapse:        collapse\n  margin:                 0\n  padding:                0\n  height:                 100%\n\n.columnbox\n  width:                  100%\n\n.column.columns-3\n  width:                  ( ( $chase-width - 2 * $gap-vertical-width ) / 3 )\n  min-width:              ( ( $chase-width - 2 * $gap-vertical-width ) / 3 )\n  max-width:              ( ( $chase-width - 2 * $gap-vertical-width ) / 3 )\n\ntd\n  outline: 1px solid green");
        });
        //=====================================================================================================
        CHASE = (...p) => {
          return TABLE('.chase', () => {
            TR(() => {
              TD('.margin.margin-left', {
                rowspan: 3
              });
              TD('.margin.margin-top');
              return TD('.margin.margin-right', {
                rowspan: 3
              });
            });
            TR(() => {
              return TD('.main', ...p);
            });
            return TR(() => {
              return TD('.margin.margin-bottom');
            });
          });
        };
        //-----------------------------------------------------------------------------------------------------
        COLUMNBOX = (column_count) => {
          return TABLE('.columnbox', () => {
            return TR(() => {
              var column_nr, j, ref, results;
              results = [];
              for (column_nr = j = 1, ref = column_count; (1 <= ref ? j <= ref : j >= ref); column_nr = 1 <= ref ? ++j : --j) {
                if (column_nr !== 1) {
                  TD('.gap.vertical');
                }
                results.push(TD(`.column.columns-${column_count}`, () => {
                  if (column_nr === 1) {
                    return TEXT("xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx\nxxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx xxx");
                  }
                }));
              }
              return results;
            });
          });
        };
        //=====================================================================================================
        return BODY(() => {
          return ARTBOARD('.pages', () => {
            return ZOOMER(() => {
              return PAGE(() => {
                return CHASE({}, () => {
                  return COLUMNBOX(3, () => {});
                });
              });
            });
          });
        });
      });
    });
  };

  //   MARGIN '.left', =>
  //   COLUMN =>
  //     for idx in [ 0 ... 70 ]
  //       DIV '', "#{idx}"
  //   GAP '.vertical', =>
  //   COLUMN =>
  //   GAP '.vertical', =>
  //   COLUMN =>
  //   MARGIN '.right', =>
  // MARGIN '.bottom', =>

  //-----------------------------------------------------------------------------------------------------------
  /* rendering with float instead of flex */
  this.INLINEBLOCK_layout = function() {
    //.........................................................................................................
    return render(() => {
      DOCTYPE(5);
      return HTML(() => {
        HEAD(() => {
          META({
            charset: 'utf-8'
          });
          TITLE('mingkwai');
          JS('./jquery-2.1.3.js');
          JS('./blaidddrwg.js');
          JS('./browser.js');
          return STYLUS("\n\n/* ------------------------------------------------------------------------------------------------------ */\n/* Experimentally detected that `$paper-height = 297mm - 0.13mm` is not enough but\n  `297mm - 0.15mm` is enough to avoid intervening blank pages in the PDF. */\n$paper-width                = 210mm\n$paper-height               = 297mm - 0.15mm\n// $paper-width                = 210mm\n// $paper-height               = 297mm\n/* ...................................................................................................... */\n// 'gutters' in typographic terms (non-printable areas) become 'paddings' in CSS:\n$gutter-left                = 4.5mm\n$gutter-right               = $gutter-left\n$gutter-top                 = 8mm\n$gutter-bottom              = 10mm\n/* ...................................................................................................... */\n// 'margins' in typographic terms (areas outside the main content) become 'paddings' in CSS:\n$margin-left                = 15mm\n$margin-right               = $margin-left\n$margin-top                 = 11mm\n$margin-bottom              = 5mm\n/* ...................................................................................................... */\n$gap-vertical-width         = 5mm\n/* ...................................................................................................... */\n// the chase represents the printable area; inside, flanked by the margins, is the main content area:\n$chase-width                = $paper-width  - $gutter-left  - $gutter-right\n$chase-height               = $paper-height - $gutter-top   - $gutter-bottom\n/* ...................................................................................................... */\n$galley-width               = $paper-width\n/* ...................................................................................................... */\n$epsilon                    = 1mm\n\n\n/* ------------------------------------------------------------------------------------------------------ */\npaper\npage\n width:                   $paper-width\n height:                  $paper-height\n display:                 block\n\nhtml\n  font-size:              4mm\n\noverlay\n  display:                block\n  position:               absolute\n\nmargin\n  background-color:       #e994ae\n\nmargin.left\nmargin.right\n  display:                inline-block\n  height:                 100%\n\nmargin.left\n  min-width:              $margin-left\n  max-width:              $margin-left\n\nmargin.right\n  min-width:              $margin-right\n  max-width:              $margin-right\n\nmargin.top\nmargin.bottom\n  display:                block\n  width:                  $chase-width\n\nmargin.top\n  min-height:             $margin-top\n  max-height:             $margin-top\n\nmargin.bottom\n  min-height:             $margin-bottom\n  max-height:             $margin-bottom\n\nchase\ncolumn\nbox\nmargin\ngap\npage\n  outline:                1px dotted red\n  outline-offset:         -1px\n\nchase\n  position:               relative\n  left:                   $gutter-left\n  top:                    $gutter-top\n  width:                  $chase-width\n  height:                 $chase-height\n  display:                block\n\nrow\n  display:                inline-block\n  width:                  $chase-width\n  white-space:            nowrap\n  // !!!!!\n  height:                 10mm\n\ngap\n  display:                inline-block\n  width:                  $gap-vertical-width\n  height:                 100%\n  background-color: #ddd\n\ncolumn\n  display:                inline-block\n  white-space:            normal\n  height:                 100%\n\n.columns-3 column\n  width:                  ( ( $chase-width - 2 * $gap-vertical-width - $margin-left - $margin-right ) / 3 )");
        });
        //=====================================================================================================
        return BODY(() => {
          return ARTBOARD('.pages', () => {
            return ZOOMER(() => {
              // for page_nr in [ 1 .. 5 ]
              return PAGE(() => {
                // OVERLAY page_nr
                return CHASE(() => {
                  MARGIN('.top', () => {});
                  ROW('.horizontal.columns-3', () => {
                    MARGIN('.left', () => {});
                    COLUMN(() => {});
                    // if page_nr is 1
                    // for idx in [ 0 ... 70 ]
                    //   DIV '', "#{idx}"
                    GAP('.vertical', () => {});
                    COLUMN(() => {});
                    GAP('.vertical', () => {});
                    COLUMN(() => {});
                    return MARGIN('.right', () => {});
                  });
                  return MARGIN('.bottom', () => {});
                });
              });
            });
          });
        });
      });
    });
  };

  // #-----------------------------------------------------------------------------------------------------------
// @layout = @FONTTEST_layout
// @layout = @FLEXHEIGHTTEST_layout
// @layout = @TABLE_layout
// @layout = @FLOAT_layout
// @layout = @INLINEBLOCK_layout
// @layout = @NORMAL_layout

}).call(this);

//# sourceMappingURL=templates.js.map
