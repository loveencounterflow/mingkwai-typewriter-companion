{
  "version": 3,
  "file": "write-kana-keyboard.js",
  "sourceRoot": "../..",
  "sources": [
    "src/ds-transforms/write-kana-keyboard.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/DS-TRANSFORMS/WRITE-KANA-KEYBOARD'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nFS                        = require 'fs'\nPATH                      = require 'path'\nPD                        = require 'pipedreams'\n{ $\n  $async\n  select }                = PD\n{ assign\n  jr }                    = CND\nTRIODE                    = require 'triode'\nJACONV                    = require 'jaconv'\nrequire '../exception-handler'\nlength_of                 = ( x ) -> ( Object.keys x ).length\nterminate                 = -> warn 'terminating'; process.exit 1\n#-----------------------------------------------------------------------------------------------------------\n@_drop_extension          = ( path ) -> path[ ... path.length - ( PATH.extname path ).length ]\n@_xray                    = ( text ) -> ( ( ( chr.codePointAt 0 ).toString 16 ) for chr in Array.from text )\n@$as_line                 = -> $ ( d, send ) => send ( jr d ) + '\\n'\n@_resolve_dec_entities    = ( text ) -> text.replace /&#([0-9a-f]+);/ig,  ( $0, $1 ) -> String.fromCodePoint ( parseInt $1, 10 )\n@_resolve_hex_entities    = ( text ) -> text.replace /&#x([0-9a-f]+);/ig, ( $0, $1 ) -> String.fromCodePoint ( parseInt $1, 16 )\n@_resolve_entities        = ( text ) -> @_resolve_dec_entities @_resolve_hex_entities text\n\n# debug @_xray '𪜈゙  ドモ'; xxx\n\n# debug rpr @_resolve_entities 'xxx&#x20;xxx'\n# process.exit 1\n\n#-----------------------------------------------------------------------------------------------------------\n@$name_fields = ->\n  return $ ( d, send ) =>\n    [ source, target, ] = d\n    send { source, target, }\n\n#-----------------------------------------------------------------------------------------------------------\n@$add_sections = ->\n  section = null\n  return $ ( d, send ) =>\n    if d.source is 'SECTION'\n      section = ( d.target.split /\\s+/ )[ 0 ].toLowerCase()\n    else\n      d.section = section if section?\n      send d\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$feed_triode = ->\n  last        = Symbol 'last'\n  triode      = TRIODE.new()\n  duplicates  = {}\n  #.........................................................................................................\n  return $ { last, }, ( d, send ) =>\n    if d is last\n      if ( count = length_of duplicates ) > 0\n        for source, targets of duplicates\n          warn \"duplicate: #{source} -> #{targets.join ', '}\"\n        warn \"µ44874 detected #{count} duplicates (see listing above)\"\n        terminate()\n        # throw new Error \"µ44874 detected #{count} duplicates (see listing above)\"\n      return send triode\n    #.......................................................................................................\n    if triode.has d.source\n      unless ( targets = duplicates[ d.source ] )?\n        targets = duplicates[ d.source ] = [ triode.get d.source ]\n      return targets.push d.target\n    #.......................................................................................................\n    triode.set d.source, d.target\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$resolve_entities = => PD.$watch ( d ) =>\n  d.source = @_resolve_entities d.source\n  d.target = @_resolve_entities d.target\n\n#-----------------------------------------------------------------------------------------------------------\n@$remove_inline_comments = => PD.$watch ( d ) =>\n  d.target = d.target.replace /\\s+#\\s+.*$/g, ''\n\n#-----------------------------------------------------------------------------------------------------------\n@$process_hentaigana = =>\n  nr    = 0\n  seen  = {}\n  return $ ( d, send ) =>\n    return send d unless d.section is 'hentaigana'\n    nr       += +1\n    e         = assign {}, d\n    e.source  = \"\\\\h-#{e.source}-#{nr}.\"\n    e.target  = e.target.replace /\\(.*$/g, ''\n    send e\n    f         = assign {}, d\n    f.source  = \"\\\\m-#{f.source}-#{nr}.\"\n    f.target  = f.target.replace /^.+\\((.+)\\)$/g, '$1'\n    send f unless seen[ f.target ]\n    seen[ f.target ] = true\n\n\n#-----------------------------------------------------------------------------------------------------------\n@$add_katakana = =>\n  seen = {}\n  return $ ( d, send ) =>\n    seen[ d.source ] = d.target\n    send d\n    #.......................................................................................................\n    source  = d.source.toUpperCase()\n    target  = JACONV.toKatakana d.target\n    if source isnt d.source\n      if source of seen\n        urge \"dropping #{source} -> #{target} in favor of #{seen[ source ]}\"\n      else\n        if ( target isnt d.target )\n          seen[ source ] = target\n          e         = assign {}, d\n          e.source  = source\n          e.target  = target\n          send e\n    #.......................................................................................................\n    source  = '^' + d.source\n    target  = JACONV.toHanKana JACONV.toKatakana d.target\n    if source isnt d.source\n      if source of seen\n        urge \"dropping #{source} -> #{target} in favor of #{seen[ source ]}\"\n      else\n        if ( target isnt d.target )\n          seen[ source ] = target\n          f         = assign {}, d\n          f.source  = source\n          f.target  = target\n          send f\n    #.......................................................................................................\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$postprocess = ->\n  return PD.$watch ( triode ) =>\n    triode.disambiguate_subkey 'n', 'n.'\n    triode.disambiguate_subkey 'v', 'v.'\n    # triode.disambiguate_subkey 'vv', 'vv.'\n    triode.disambiguate_subkey 'N', 'N.'\n    triode.disambiguate_subkey 'V', 'V.'\n    triode.disambiguate_subkey '^n', '^n.'\n    triode.disambiguate_subkey '^v', '^v.'\n    # for subkey, superkeys of triode.get_all_superkeys()\n    #   help \"µ46474 resolving #{rpr subkey} -> #{rpr superkeys}\"\n    #   triode.apply_replacements_recursively subkey\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$write_kbd = ( target_path ) =>\n  pipeline = []\n  pipeline.push PD.$watch ( triode ) =>\n    if ( count = length_of ( superkeys = triode.get_all_superkeys() ) ) > 0\n      for source, targets of superkeys\n        warn \"unresolved superkey: #{source} -> #{targets.join ', '}\"\n      warn \"µ44875 detected #{count} unresolved superkeys (see listing above)\"\n      terminate()\n  pipeline.push $ ( triode, send ) => send triode.replacements_as_js_module_text()\n  pipeline.push PD.write_to_file target_path\n  return PD.$tee PD.pull pipeline...\n\n#-----------------------------------------------------------------------------------------------------------\n@$write_cdt = ( target_path ) =>\n  pipeline = []\n  pipeline.push $ ( triode, send ) => send triode.as_js_module_text()\n  pipeline.push PD.write_to_file target_path\n  return PD.$tee PD.pull pipeline...\n\n#-----------------------------------------------------------------------------------------------------------\n@write_cache = ( settings ) -> new Promise ( resolve, reject ) =>\n  kbd_target_filename  = ( @_drop_extension PATH.basename settings.source_path ) + '.kbd.js'\n  cdt_target_filename  = ( @_drop_extension PATH.basename settings.source_path ) + '.cdt.js'\n  kbd_target_path      = PATH.resolve PATH.join __dirname, '../../.cache', kbd_target_filename\n  cdt_target_path      = PATH.resolve PATH.join __dirname, '../../.cache', cdt_target_filename\n  help \"translating #{rpr PATH.relative process.cwd(), settings.source_path}\"\n  #.........................................................................................................\n  convert = =>\n    pipeline = []\n    pipeline.push PD.read_from_file settings.source_path\n    # pipeline.push PD.$split()\n    pipeline.push PD.$split_wsv 2\n    pipeline.push @$name_fields()\n    pipeline.push @$add_sections()\n    pipeline.push @$remove_inline_comments()\n    pipeline.push @$resolve_entities()\n    pipeline.push @$process_hentaigana()\n    pipeline.push @$add_katakana()\n    # pipeline.push PD.$show()\n    pipeline.push @$feed_triode()\n    pipeline.push @$postprocess()\n    ( pipeline.push PD.$watch ( triode ) -> settings.postprocess triode ) if settings.postprocess?\n    pipeline.push @$write_kbd kbd_target_path\n    pipeline.push @$write_cdt cdt_target_path\n    pipeline.push PD.$drain =>\n      help \"wrote output to #{rpr PATH.relative process.cwd(), kbd_target_path}\"\n      resolve()\n    PD.pull pipeline...\n    return null\n  #.........................................................................................................\n  convert()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  L = @\n  do ->\n    #.......................................................................................................\n    settings =\n      source_path:  PATH.resolve PATH.join __dirname, '../../db/jp_kana.wsv'\n    await L.write_cache settings\n    # #.......................................................................................................\n    # settings =\n    #   source_path:  PATH.resolve PATH.join __dirname, '../../db/gr_gr.keyboard.wsv'\n    #   postprocess: ( triode ) ->\n    #     debug 'µ77622', triode.get_all_superkeys()\n    #   #   triode.disambiguate_subkey 'n', 'n.'\n    #   #   triode.disambiguate_subkey 'v', 'v.'\n    #   #   for subkey, superkeys of triode.get_all_superkeys()\n    #   #     help \"µ46474 resolving #{rpr subkey} -> #{rpr superkeys}\"\n    #   #     triode.apply_replacements_recursively subkey\n    #   #   return null\n    # await L.write_cache settings\n    # help 'ok'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  ]
}