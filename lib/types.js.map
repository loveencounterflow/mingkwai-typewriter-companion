{
  "version": 3,
  "file": "types.js",
  "sourceRoot": "..",
  "sources": [
    "src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'position',\n  tests:\n    '? isa pod':                ( x ) -> @isa.object        x\n    '? has_keys line, ch':      ( x ) -> @has_keys          x, 'line', 'ch'\n    '?.line is a count':        ( x ) -> @isa.count         x.line\n    '?.ch is a count':          ( x ) -> @isa.count         x.ch\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'range',\n  tests:\n    '? isa pod':                ( x ) -> @isa.object        x\n    '? has_keys from, to':      ( x ) -> @has_keys          x, 'from', 'to'\n    '?.from is a position':     ( x ) -> @isa.position      x.from\n    '?.to is a position':       ( x ) -> @isa.position      x.to\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT should check for upper boundary ###\n@declare 'tsnr',\n  tests:\n    '? is a count':             ( x ) -> @isa.count         x\n    # 'transcriptor exists':      ( x ) -> S.transcriptors[ x ]?\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT this describes the *value* property of the event, but this will probably change to the event\nitself in the upcoming PipeDreams version. ###\n@declare 'replace_text_event',\n  tests:\n    '? has keys 1':                 ( x ) -> @has_keys          x, 'otext', 'ntext'\n    '? has keys 2':                 ( x ) -> @has_keys          x, 'tsnr', 'sigil', 'origin', 'target', 'tsm'\n    '?.otext is a nonempty text':   ( x ) -> @isa.nonempty_text x.otext\n    '?.ntext is a nonempty text':   ( x ) -> @isa.nonempty_text x.ntext\n    '?.sigil is a nonempty text':   ( x ) -> @isa.nonempty_text x.sigil\n    '?.tsnr is a tsnr':             ( x ) -> @isa.tsnr          x.tsnr\n    '?.target is a position':       ( x ) -> @isa.position      x.target\n    '?.tsm is a range':             ( x ) -> @isa.range         x.tsm\n    '?.origin is a range':          ( x ) -> @isa.range         x.origin\n   # { otext: 'ka',\n   #   tsnr: 2,\n   #   sigil: 'ひ',\n   #   target: { line: 0, ch: 6 },\n   #   tsm: { from: { line: 0, ch: 6 }, to: { line: 0, ch: 11 } },\n   #   origin: { from: { line: 0, ch: 9 }, to: { line: 0, ch: 11 } },\n   #   ntext: 'か' } }\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'edict2u_plural_row',\n  tests:\n    \"? is an object\":                   ( x ) -> @isa.object x\n    \"? has key 'readings'\":             ( x ) -> @has_key x, 'readings'\n    \"? has key 'candidates'\":           ( x ) -> @has_key x, 'candidates'\n    \"? has key 'gloss'\":                ( x ) -> @has_key x, 'gloss'\n    \"? has key 'line'\":                 ( x ) -> @has_key x, 'line'\n    \"?.readings is a *list\":            ( x ) -> ( not x.readings? ) or @isa.list x.readings\n    \"?.candidates is a list\":           ( x ) -> @isa.list x.candidates\n    \"?.gloss is a nonempty text\":       ( x ) -> @isa.nonempty_text x.gloss\n    \"?.line is a nonempty text\":        ( x ) -> @isa.nonempty_text x.line\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'edict2u_singular_row',\n  tests:\n    \"? is an object\":                   ( x ) -> @isa.object x\n    \"? has key 'reading'\":              ( x ) -> @has_key x, 'reading'\n    \"? has key 'candidate'\":            ( x ) -> @has_key x, 'candidate'\n    \"? has key 'gloss'\":                ( x ) -> @has_key x, 'gloss'\n    \"? has key 'line'\":                 ( x ) -> @has_key x, 'line'\n    \"?.reading is a nonempty text\":     ( x ) -> @isa.nonempty_text x.reading\n    \"?.candidate is a nonempty text\":   ( x ) -> @isa.nonempty_text x.candidate\n    \"?.gloss is a nonempty text\":       ( x ) -> @isa.nonempty_text x.gloss\n    \"?.line is a nonempty text\":        ( x ) -> @isa.nonempty_text x.line\n\n#-----------------------------------------------------------------------------------------------------------\nregex_cid_ranges =\n  hiragana:     '[\\u3041-\\u3096]'\n  katakana:     '[\\u30a1-\\u30fa]'\n  kana:         '[\\u3041-\\u3096\\u30a1-\\u30fa]'\n  ideographic:  '[\\u3006-\\u3007\\u3021-\\u3029\\u3038-\\u303a\\u3400-\\u4db5\\u4e00-\\u9fef\\uf900-\\ufa6d\\ufa70-\\ufad9\\u{17000}-\\u{187f7}\\u{18800}-\\u{18af2}\\u{1b170}-\\u{1b2fb}\\u{20000}-\\u{2a6d6}\\u{2a700}-\\u{2b734}\\u{2b740}-\\u{2b81d}\\u{2b820}-\\u{2cea1}\\u{2ceb0}-\\u{2ebe0}\\u{2f800}-\\u{2fa1d}]'\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'text_with_hiragana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text   x\n    '? has hiragana':           ( x ) -> ( x.match ///#{regex_cid_ranges.hiragana}///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'text_with_katakana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text   x\n    '? has katakana':           ( x ) -> ( x.match ///#{regex_cid_ranges.katakana}///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'text_with_kana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text   x\n    '? has kana':               ( x ) -> ( x.match ///#{regex_cid_ranges.kana}///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'text_with_ideographic',\n  tests:\n    '? is a text':              ( x ) -> @isa.text   x\n    '? has ideographic':        ( x ) -> ( x.match ///#{regex_cid_ranges.ideographic}///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'text_hiragana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text   x\n    '? is hiragana':            ( x ) -> ( x.match ///^#{regex_cid_ranges.hiragana}+$///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'text_katakana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text   x\n    '? is katakana':            ( x ) -> ( x.match ///^#{regex_cid_ranges.katakana}+$///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'text_kana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text   x\n    '? is kana':                ( x ) -> ( x.match ///^#{regex_cid_ranges.kana}+$///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'text_ideographic',\n  tests:\n    '? is a text':              ( x ) -> @isa.text   x\n    '? is ideographic':         ( x ) -> ( x.match ///^#{regex_cid_ranges.ideographic}+$///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'blank_text',\n  tests:\n    '? is a text':              ( x ) -> @isa.text   x\n    '? is blank':               ( x ) -> ( x.match ///^\\s*$///u )?\n\n\n############################################################################################################\nunless module.parent?\n  null\n\n\n"
  ]
}