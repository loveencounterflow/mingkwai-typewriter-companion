// Generated by CoffeeScript 2.4.1
(function() {
  'use strict';
  var $, $async, CND, FS, PATH, PD, assign, badge, debug, echo, help, info, jr, lookup_in_jishodotorg, request, rpr, select, urge, url, warn, whisper;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = '明快打字机/EXPERIMENTS/USING-JISHO-ORG-API';

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  info = CND.get_logger('info', badge);

  urge = CND.get_logger('urge', badge);

  help = CND.get_logger('help', badge);

  whisper = CND.get_logger('whisper', badge);

  echo = CND.echo.bind(CND);

  //...........................................................................................................
  FS = require('fs');

  PATH = require('path');

  PD = require('pipedreams');

  ({$, $async, select} = PD);

  ({assign, jr} = CND);

  request = require('request-promise-native');

  require('../exception-handler');

  url = 'https://jisho.org/api/v1/search/words?keyword=にほん';

  url = 'https://jisho.org/api/v1/search/words?keyword=%E3%81%AB%E3%81%BB%E3%82%93';

  url = 'https://jisho.org/api/v1/search/words?keyword=%E3%81%BE%E3%82%82%E3%82%8B';

  // read_as_stream = ( url ) ->
  // 	### API gives back one blob of JSON, so better off w/ promised-based interface ###
  // 	source = PD.read_from_nodejs_stream request.get url
  // 	pipeline = []
  // 	pipeline.push source
  // 	pipeline.push PD.$split()
  // 	pipeline.push PD.$show()
  // 	pipeline.push PD.$drain()
  // 	PD.pull pipeline...
  // read_as_stream 'https://jisho.org/api/v1/search/words?keyword=%E3%81%AB%E3%81%BB%E3%82%93'
  lookup_in_jishodotorg = async function(q) {
    var base_url, definition, english, entry, i, j, k, l, len, len1, len2, len3, reading, ref, ref1, ref2, ref3, response, seen, sense, word;
    base_url = 'https://jisho.org/api/v1/search/words';
    response = (await request.get(base_url, {
      qs: {
        keyword: q
      },
      json: true
    }));
    info('µ66474', q);
    ref = response.data;
    for (i = 0, len = ref.length; i < len; i++) {
      entry = ref[i];
      if (entry.japanese == null) {
        // continue unless entry.is_common
        continue;
      }
      //.......................................................................................................
      // seen 		= new Set()
      english = new Set();
      if (entry.senses != null) {
        ref1 = entry.senses;
        for (j = 0, len1 = ref1.length; j < len1; j++) {
          sense = ref1[j];
          if (sense.english_definitions == null) {
            continue;
          }
          ref2 = sense.english_definitions;
          for (k = 0, len2 = ref2.length; k < len2; k++) {
            definition = ref2[k];
            english.add(definition);
          }
        }
      }
      english = [...english.keys()].join('; ');
      //.......................................................................................................
      seen = new Set();
      ref3 = entry.japanese;
      for (l = 0, len3 = ref3.length; l < len3; l++) {
        ({word, reading} = ref3[l]);
        if (!((reading != null) && reading.startsWith(q))) {
          continue;
        }
        if (word == null) {
          continue;
        }
        if (seen.has(word)) {
          continue;
        }
        seen.add(word);
        urge(word, '[' + reading + ']', CND.lime(english));
      }
    }
    return null;
  };

  (async function() {
    // await lookup_in_jishodotorg 'きょう'
    await lookup_in_jishodotorg('かく');
    await lookup_in_jishodotorg('しみず');
    await lookup_in_jishodotorg('きよみず');
    await lookup_in_jishodotorg('taiwan');
    return (await lookup_in_jishodotorg('父親'));
  })();

}).call(this);

//# sourceMappingURL=using-jisho-org-api.js.map
