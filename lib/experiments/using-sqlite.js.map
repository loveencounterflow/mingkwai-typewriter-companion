{
  "version": 3,
  "file": "using-sqlite.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/using-sqlite.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'IME/EXPERIMENTS/KB'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nPD                        = require 'pipedreams'\n{ $\n  $async\n  select }                = PD\n{ assign\n  jr }                    = CND\n\n\n# db_path   = PATH.resolve PATH.join __dirname, '../../db/data.db'\nDatabase      = require 'better-sqlite3'\nsqlitemk_path = PATH.resolve PATH.join __dirname, '../../../../sqlite-for-mingkwai-ime'\ndb_path       = PATH.join sqlitemk_path, 'experiments/demo-amatch.db'\ndb            = new Database db_path, { verbose: urge }\ndb.loadExtension PATH.join sqlitemk_path, 'extensions/amatch.so'\n\nsource    = PD.new_push_source()\npipeline  = []\npipeline.push source\npipeline.push PD.$show()\npipeline.push PD.$drain()\nPD.pull pipeline...\n\nas_int = ( x ) -> if x then 1 else 0\n\n#-----------------------------------------------------------------------------------------------------------\ndb.function 'matches', { deterministic: true, }, ( text, pattern ) ->\n  return as_int ( text.match new RegExp pattern )?\n\n#-----------------------------------------------------------------------------------------------------------\ndb.function 'regexp_replace', { deterministic: true, }, ( text, pattern, replacement ) ->\n  return text.replace ( new RegExp pattern, 'g' ), replacement\n\n#-----------------------------------------------------------------------------------------------------------\ndb.function 'cleanup_texname', { deterministic: true, }, ( text ) ->\n  R = text\n  R = R.replace /\\\\/g,    ''\n  R = R.replace /[{}]/g,  '-'\n  R = R.replace /-+/g,    '-'\n  R = R.replace /^-/g,    ''\n  R = R.replace /-$/g,    ''\n  R = R.replace /'/g,     'acute'\n  return R\n\nr = ( strings ) -> return [ 'run',   ( strings.join '' ), ]\nq = ( strings ) -> return [ 'query', ( strings.join '' ), ]\n\n\nsqls = [\n  # q\"\"\".tables\"\"\"\n  r\"\"\"drop view if exists xxx;\"\"\"\n  q\"\"\"select * from amatch_vtable\n  where true\n    and ( distance <= 100 )\n    -- and ( word match 'abc' )\n    -- and ( word match 'xxxx' )\n    -- and ( word match 'cat' )\n    -- and ( word match 'dog' )\n    -- and ( word match 'television' )\n    -- and ( word match 'treetop' )\n    -- and ( word match 'bath' )\n    -- and ( word match 'kat' )\n    and ( word match 'laern' )\n    -- and ( word match 'wheather' )\n    -- and ( word match 'waether' )\n    ;\"\"\"\n  # r\"\"\"create view xxx as select\n  #     \"UNICODE DESCRIPTION\"     as uname,\n  #     latex                     as latex,\n  #     cleanup_texname( latex )  as texname\n  #   from unicode_entities\n  #   where true\n  #     and ( not matches( latex, '^\\\\s*$' ) );\"\"\"\n  # q\"\"\"select * from xxx limit 2500;\"\"\"\n  q\"\"\"select sqlite_version();\"\"\"\n  ]\n\nfor [ mode, sql, ] in sqls\n  urge sql\n  try\n    statement = db.prepare sql\n  catch error\n    whisper '-'.repeat 108\n    warn \"when trying to prepare statement\"\n    info sql\n    warn \"an error occurred:\"\n    info error.message\n    whisper '-'.repeat 108\n    throw error\n  switch mode\n    when 'run'\n      debug statement.run()\n    when 'query'\n      source.send row for row from statement.iterate()\n    else\n      throw new Error \"Âµ09202 unknown mode #{rpr mode}\"\n\n\n"
  ]
}